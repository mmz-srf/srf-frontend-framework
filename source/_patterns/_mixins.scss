

/* let's an element break out of its parent container and stretch to the full width */
@mixin fullwidth-element {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

/* padding for text elements in the article */
@mixin article-text-padding {
  padding: 0 24px;

  @include tablet-up {
    padding: 0 16px;
  }
}

@mixin article-element-indentation {

  @include tablet {
    margin-left: auto;
    margin-right: auto;
    width: 476px;
  }

  @include desktop-up {
    margin-left: auto;
    margin-right: auto;
    width: 516px;
  }

  @include desktop-wide {
    width: 584px;
  }
}

@mixin link-text-inline {
  a {
    color: $color-link-default;
    border-bottom: 1px solid $color-link-default;

    &:hover {
      color: $color-link-hover;
      border-bottom: 1px solid $color-link-hover;
    }

    &:active {
      color: $color-link-active;
      border-bottom: 1px solid $color-link-active;
    }
  }
}

@mixin rotate-spinner {
  100% {
    transform: rotate(360deg);
  }
}
@mixin dash-spinner {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124;
  }
}

@mixin button-label {
  position: relative;
  display: block;
  font: 16px/24px $font-regular;
  letter-spacing: .5px;
  color: $color-text-default;
  background-color: $color-bg-box;
  margin: 0 0 2px;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
  padding: 14px 16px 14px 48px;

  &:hover, &:active, &:focus {
    background-color: $color-bg-box-hover;
  }
}

@mixin spinner($lineWidth: 2px, $dashColor: #e31f2b, $bgColor: #dadad2) {
  position: relative;
  height: 24px;
  width: 24px;
  animation: rotateAnimation 2s linear infinite;
  border: $lineWidth $dashColor solid;
  border-radius: 50%;

  &::before,
  &::after {
    content: '';
    position: absolute;
    box-sizing: border-box;

    width: calc(50% + #{$lineWidth});
    height: calc(100% + #{2 * $lineWidth});

    border: $lineWidth solid $bgColor;
  }

  &::before {
    animation: rotateAnimation 2s infinite ease 1.5s;
    border-radius: 9999px 0 0 9999px;
    border-right: none;
    left: -$lineWidth;
    top: -$lineWidth;
    transform-origin: 100% 50%;
  }
  &::after {
    animation: rotateAnimation 2s infinite ease;
    border-radius: 0 9999px 9999px 0;
    border-left: none;
    left: 50%;
    top: -$lineWidth;
    transform-origin: 0 50%;
  }
}

@keyframes rotateAnimation {
  0% {   transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
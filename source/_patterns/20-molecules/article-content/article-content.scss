@import "../../variables";

.article-content {
  /* OVERRIDE CRITICAL CSS */
  min-height: 0;
  opacity: 1;
  /****/
  margin: 0 0 24px;
  font-family: $font-light;
  font-size: 20px;
  line-height: $default-line-height-ratio;
  letter-spacing: .3px;
  color: $color-text-default;

  @include smartphone {
    font-size: 18px;
    letter-spacing: .5px;
  }

  /* h1: usually not possible to create in article text but tiny mce knows no better :) */
  /* h3: usually not possible to create in article text but some users manage to do it :) */
  & > h1, & > h2, & > h3 {
    @include article-text-padding;
    margin: 32px 0 12px;
    font-family: $font-medium;
    font-size: 24px;
    line-height: 32px;
    letter-spacing: .3px;

    @include smartphone {
      margin: 24px 0 12px;
      font-size: 22px;
      line-height: 28px;
      letter-spacing: .3px;
    }
  }

  & > p {
    @include article-text-padding;
    margin: 12px 0 24px;

    @include smartphone {
      margin: 12px 0 20px;
    }
  }

  // only apply default text link styling to links without a class (i.e. body text from our CMS)
  a:not([class]),
  a[class=""] {
    @include text-link-defaults;
  }
}

ul {
  // @extend used here to apply the DRY principle while coping with ezxml's missing classes for html elements
  // tip: always be careful with @extend
  @extend .text-list;
  @extend .text-list--unordered;

}

ol {
  // @extend used here to apply the DRY principle while coping with ezxml's missing classes for html elements
  // tip: always be careful with @extend
  @extend .text-list;
  @extend .text-list--ordered;
}

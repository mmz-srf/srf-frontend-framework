.navigation {
  width: 100%;
  margin: 0 auto;
  padding: 0;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  display: flex;
  align-items: flex-start;
  flex-direction: column;
  flex-wrap: wrap;

  @include tablet-up {
    flex-direction: row;
  }
}

.navigation__group,
.navigation__group-item,
.navigation-item,
.navigation--subnav-item {
  margin: 0;
  padding: 0;
}

// Override li's :before pseudo element
.navigation__group-item,
.navigation-item,
.navigation--subnav-item {
  &::before {
    content: none;
  }
}

.navigation-item {
  width: 100%;
}

.navigation-item--column {
  @include tablet-up {
    flex: 1 1 0;
    width: calc(100% / 3);
    border-right: 1px solid #444;

    // Workaround due to lack of :first-of-class selector.
    // We want padding on both sides but only on the left of the first
    // and on the right of the last element with this class.
    // So we set the style of the 1st on all and "unset" it for all with a prev. neighbor of the same class.
    // See: https://stackoverflow.com/questions/2717480/css-selector-for-first-element-with-class (accepted answer)
    padding-right: 12px;

    & ~ .navigation-item--column {
      padding:0 12px;
    }

    &:last-child {
      border-right: none;
      padding-right:0;
    }
  }
}

.navigation__group-item--close {
  display: none;
}

.navigation__group {
  border-bottom: 1px solid #444;
  padding: 8px 12px;

  @include tablet-up {
    border-bottom: none;
    padding: 0;
  }
}

.navigation--subnav-wrapper {
  background-color: #2C2C2C;
  margin: 8px -12px -8px -12px;
  padding: 0;
  transition: margin-top .2s ease-in-out,
              margin-bottom .2s ease-in-out,
              padding-top .2s ease-in-out,
              padding-bottom .2s ease-in-out,
              border .2s ease-in-out;

  border-top: 0 solid transparent;
  border-bottom: 0 solid transparent;

  @include tablet-up {
    margin-top: 32px;
    margin-right: calc((100vw - 100%) / 2 * -1);
    margin-bottom: -32px;
    margin-left: calc((100vw - 100%) / 2 * -1);
    padding: 0 32px;
    position: relative;

    // Least ugly way to cover up the | border on the navigation group
    &::before {
      content: '';
      position: absolute;
      top: -33px;
      width: 100%;
      height: 32px;
      left: 0;
      background-color: #333;
    }
  }
}

.navigation--subnav {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding: 0 12px;
  overflow: hidden;

  @include tablet-up {
    padding: 0;
  }
}

.navigation--subnav-wrapper--open {
  border-top: 1px solid rgba(0, 0, 0, .2);
  border-bottom: 1px solid rgba(0, 0, 0, .2);

  @include smartphone {
    // hide the border of the parent element by subtracting 1 more pix.
    margin-bottom: -9px;

    .navigation--subnav {
      margin-top: 8px;
      padding-top: 8px;
      padding-bottom: 8px;
    }
  }

  @include tablet-up {
    padding-top: 20px;
    padding-bottom: 20px;
  }

  .navigation--subnav-item {
    max-height: 100px;
    opacity: 1;
  }
}

.navigation--subnav-item {
  transition: margin .2s ease-in-out,
              opacity .2s ease-in-out,
              max-height .2s ease-in-out;
  max-height: 0;
  opacity: 0;
  margin-top: 0;
  margin-bottom: 0;

  @include smartphone {
    flex: 1 1 100%;
  }

  @include tablet-up {
    flex: 1 0 30%;
    margin: 0 13px 0 12px;
    align-self: stretch;

    &:nth-child(3n+1) { order: 0;}
    &:nth-child(3n+2) { order: 1;}
    &:nth-child(3n+3) { order: 2;}

    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(3) { margin-left: 0; }

    &:nth-child(7),
    &:nth-child(8),
    &:nth-child(9) { margin-right: 0; }
  }
}

.navigation--footer {
  .navigation-item--column:nth-last-of-type(1) .navigation__group {
    // in the footer, the last column has no border afterwards
    border-bottom: 0;
  }
}
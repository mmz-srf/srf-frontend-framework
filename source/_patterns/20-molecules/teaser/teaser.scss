@import "../../variables";
@import "../../mixins";
@import "../../breakpoints";
@import "teaser-theme-settings";

/* autoprefixer grid: on */
.teaser {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  border-radius: 2px;
  overflow: hidden; // to cut off image with border radius

  /* theme */
  @include customPropWithFallback('color', '--teaser-color-text', $color-text-default);
  @include customPropWithFallback('background-color', '--teaser-color-background', $color-bg-card);

  box-shadow: $shadow-elevation1;
  transition: box-shadow .2s ease-in-out;

  @include breakLongWords;

  @include desktop-up {
    &:hover,
    &:focus,
    &:active {
      box-shadow: $shadow-elevation16;
    }
  }

  &.teaser--no-translate {
    box-shadow: none;
  }
}

.teaser__main {
  display: flex;
  flex-direction: row-reverse;
  flex-grow: 1;
  width: 100%;
  flex-wrap: wrap;
  position: relative; // to position the pseudo elements

  /* Teasers have an invisible layer on top that gets sligthly opaque when active/focused */
  &::after {
    position: absolute;
    content: '';
    height: 100%;
    width: 100%;
    pointer-events: none;


    /* theme */
    @include customPropWithFallback('background-color', '--teaser-color-overlay', $color-bg-button-hover);

    // performance improvement: Don't animate the background-color, but the opacity
    opacity: 0;
    transition: opacity .2s ease-in-out;
  }

  &:focus,
  &:active {
    &::after {
      opacity: 1;
    }
  }

  // if any Teaser(size) is being clicked … do the following with its siblings and children
  &:active ~ .teaser__links {
    .block-link--teaser-link:first-of-type {
      border-top-color: transparent;
    }
  }
}

.teaser__medium-wrapper {
  flex: 0 0 80px;
  margin: 16px 16px 16px 0;
  color: transparent; // hide alt-text in case image is broken
  position: relative; // for positioning ::pseudo elements
  background-color: $color-image-dummy;
  align-self: start;
  width: 100%;

  // border on top of the images
  &::after {
    position: absolute;
    pointer-events: none;
    content: '';
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    box-sizing: border-box;
  }
}

.teaser__medium {
  width: 80px;
  height: 80px;
}

.teaser__content {
  display: flex;
  flex-direction: column;
  flex: 1 1 0px;
  margin: 16px 12px 16px 16px;

  @include desktop-wide {
    margin: 24px;
  }
}

.teaser__broadcast-info {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin: 0 0 8px;
}

.teaser__station-logo {
  img {
    width: auto;
    height: 18px;
  }
}

.teaser__broadcast-slot {
  padding-left: 10px;
  font-family: $font-regular;
  @include fontSize(12);
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: $default-line-height-ratio;
  color: $color-text-light;

  @include tablet-up {
    @include fontSize(14);
    line-height: $emphasize-line-height-ratio;
  }

  @include desktop-wide {
    @include fontSize(16);
  }
}

.teaser__kicker {
  display: flex;
  flex-wrap: wrap;
  flex-shrink: 0;
  align-items: flex-end;
  font-family: $font-regular;
  @include fontSize(14);
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.14;
  color: $color-accentuation-red;
  word-wrap: break-word; // Enforce breaking words for IE11

  /* theme */
  @include customPropWithFallback('color', '--teaser-color-accentuation', $color-accentuation-red);
  > * {
    flex: 0 1 auto;
    margin: 0 8px 4px 0;
  }

}

/* lift kicker-text up 1px if there is a label … */
.teaser__label ~ .teaser__kicker-text {
  position: relative;
  top: -1px;
}

.teaser__title {
  margin: 0;
  font-family: $font-medium;
  @include fontSize(16);
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  line-height: $emphasize-line-height-ratio;
  color: $color-text-default;
  word-wrap: break-word; // Enforce breaking words for IE11

  /* theme */
  @include customPropWithFallback('color', '--teaser-color-title', $color-text-default);
}

.teaser__subtitle {
  margin: 4px 0 0;
  font-family: $font-regular;
  @include fontSize(14);
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: $secondary-line-height-ratio;
  color: $color-text-semi-light;

  @include tablet-up {
    @include fontSize(16);
  }

  @include desktop-wide {
    @include fontSize(18);
    line-height: $emphasize-line-height-ratio;
  }
}

.teaser__lead {
  margin: 12px 0 0;
  display: none;
  flex-shrink: 0;
  font-family: $font-light;
  @include fontSize(16);
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: $emphasize-line-height-ratio;

  /* theme */
  @include customPropWithFallback('color', '--teaser-color-text', '#383732');
}

.teaser__live {
  display: inline-block;
  margin: 0 8px 2px 0;
  padding: 1px 6px;
  background-color: $color-srf-light;
  font-family: $font-medium;
  font-size: 12px;
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.33;
  letter-spacing: normal;
  color: #fff;
  text-transform: uppercase;
  animation: pulsatingLiveAnimation 3s infinite ease-in-out;
  @include font-smoothing;

  @include tablet-up {
    position: absolute;
    top: 16px;
  }

  @include desktop-up {
    @include fontSize(16);
  }

  @include desktop-wide {
    top: 24px;
  }

  .svg-icon {
    margin: 2px 4px -2px 0;

    @include desktop-up {
      margin: 3px 6px -3px 0;
    }
  }
}

.teaser__links {
  margin: 0 0 0 16px;

  @include desktop-wide {
    margin-left: 24px;
  }
}

.teaser__scoreboard,
.teaser__opinion {
  flex: 0 0 100%;
  display: flex;
  flex-direction: row;
  align-items: flex-end;

  // IE11 extra sausage
  max-width: 100%;
}

.teaser__opinion {
  padding: 8px 16px;
  background-color: $color-bg-opinion-teaser;

  @include desktop-wide {
    padding: 8px 24px;
  }
}

.teaser--size-s {
  .teaser__medium-wrapper {
    border-radius: 2px;
    overflow: hidden;
    flex-basis: 80px;
    height: 80px;

    @include desktop-up {
      flex-basis: 94px;
      height: 94px;
    }

    &::after {
      border-radius: 2px;
      border: solid 1px rgba(0, 0, 0, 0.04);
      height: 80px;

      @include desktop-up {
        height: 94px;
      }
    }

    @include desktop-wide {
      margin: 24px 24px 24px 0;
    }
  }

  // slightly bigger image on desktop
  .teaser__medium {
    @include desktop-up {
      width: 94px;
      height: 94px;
    }
  }

  .teaser__kicker {
    @include desktop-up {
      @include fontSize(16);
      line-height: 1.13;
    }
  }

  .teaser__title {
    @include desktop-up {
      @include fontSize(18);
      line-height: $secondary-line-height-ratio;
    }
  }

  .teaser__media-duration {
    display: inline;
  }
}

/* M-TEASER
 * looks like S-Teaser on mobile
 * on tablet+ the orientation changes to vertical
 */
.teaser--size-m {
  .teaser__main {
    flex-direction: column;
    flex-wrap: nowrap;
  }

  .teaser__medium-wrapper {
    margin: 0;
    border-radius: 2px 2px 0 0;
    overflow: hidden;
    width: 100%;
    flex-basis: auto;

    &::after {
      border-radius: 0;
      border-bottom: solid 1px rgba(0, 0, 0, 0.04);
    }
  }

  .teaser__medium {
    width: 100%;
    height: auto;
  }

  .teaser__content {
    flex: 1 0 auto;
  }

  .teaser__opinion,
  .teaser__scoreboard {
    flex: 0 0 auto;
  }

  .teaser__kicker {
    @include desktop-up {
      @include fontSize(16);
      line-height: 1.13;
    }
  }

  .teaser__title {
    @include desktop-up {
      @include fontSize(20);
      line-height: $emphasize-line-height-ratio;
    }
  }
}

/* L-TEASER
 * Already vertical on mobile
 * With short lead
 */
.teaser--size-l {
  .teaser__main {
    flex-direction: column;
    flex-wrap: nowrap;
  }

  .teaser__medium {
    height: auto;
    width: 100%;
  }

  .teaser__content {
    flex: 1 0 auto;
  }

  .teaser__opinion,
  .teaser__scoreboard {
    flex: 0 0 auto;
  }

  .teaser__medium-wrapper {
    margin: 0;
    width: 100%;
    border-radius: 2px 2px 0 0;

    &::after {
      border-bottom: solid 1px rgba(0, 0, 0, 0.04);
    }
  }
}

// Shared styles for both L and XL teaser
.teaser--size-l,
.teaser--size-xl {
  .teaser__medium-wrapper {
    flex-basis: auto;
    overflow: hidden;
  }

  .teaser__lead {
    display: block;

    @include desktop-up {
      @include fontSize(18);
      line-height: $secondary-line-height-ratio;

      /* theme */
      @include customPropWithFallback('color', '--teaser-color-text', $color-media-playing);
    }
  }

  .teaser__kicker {
    @include fontSize(16);
    line-height: 1.13;

    @include desktop-up {
      @include fontSize(18);
      line-height: 1.11;
    }
  }

  .teaser__title {
    @include fontSize(20);
    line-height: $emphasize-line-height-ratio;

    @include desktop-up {
      @include fontSize(24);
    }
  }
}

/* XL-TEASER
 * Looks like L-Teaser on Mobile
 * With short lead
 * Full-width on tablet+ with medium on the left
 */
.teaser--size-xl {
  @include tablet-up {
    flex-direction: row;
    position: relative; // anchor for absolute positioned teaser links
  }

  .teaser__main {
    flex-direction: column;
    flex-wrap: nowrap;

    @include tablet-up {
      flex-direction: row;
      flex-wrap: wrap;
    }

    // if XL-Teaser is being clicked … do the following with its siblings and children
    &:active ~ .teaser__links {
      @include tablet {
        &::before {
          display: none;
        }
      }

      .block-link--teaser-link:first-of-type {
        border-top-color: transparent;
      }
    }

    @include desktop-wide {
      .block-link--teaser-link {
        margin-left: 8px;

        &:hover {
          padding-left: 32px;
          margin-left: -24px;
        }
      }
    }
  }

  .teaser__links {
    @include tablet {
      &::before {
        content: '';
        display: block;
        position: absolute;
        top: -1rem;
        right: 0;
        left: 0;
        height: 1rem;
        @include customPropWithFallback('background', '--teaser-fake-shadow-gradient', 'linear-gradient(rgba(255,255,255,0) 0%,rgba(255,255,255,1) 100%)');
      }
    }

    @include tablet-up {
      position: absolute;
      right: 0;
      bottom: 0;
      padding: 0 0 0 24px;
      margin-left: 0;
      width: 34.25%;
      @include customPropWithFallback('background-color', '--teaser-color-background', $color-bg-card);
    }
  }

  .teaser__medium {
    height: 100%;
    width: 100%;
    position: absolute;
  }

  .teaser__medium-wrapper {
    margin: 0;
    border-radius: 2px 0 0 2px;

    @include smartphone {
      height: auto;
      width: 100%;

      &::after {
        border-bottom: solid 1px rgba(0, 0, 0, 0.04);
      }
    }

    @include tablet-up {
      flex: 0 0 $teaser-xl-medium-ratio;

      &::after {
        border-right: solid 1px rgba(0, 0, 0, 0.04);
      }
    }
  }

  .teaser__content {
    flex: 1 0 auto;

    @include tablet-up {
      flex: 1 0 0px;
      margin: 24px 16px 24px 24px;
    }

    @include desktop {
      margin: 24px;
    }

    @include desktop-wide {
      margin: 32px 24px 32px 32px;
    }
  }

  .teaser__title {
    @include tablet {
      letter-spacing: 0.4px;
    }
  }

  .teaser__opinion,
  .teaser__scoreboard {
    flex: 0 0 auto;

    @include tablet-up {
      flex-basis: 100%;
    }

    @include desktop-up {
      @include fontSize(18);
      line-height: $secondary-line-height-ratio;
    }
  }

  /* if there are teaser links and an opinion, the opinion wins (links will be hidden) */
  &.teaser--with-opinion {
    @include tablet-up {
      .teaser__links {
        display: none;
      }
    }
  }

  @supports (display: grid) {
    @include tablet-up {
      .teaser__main {
        display: grid;
        grid-template-columns: $teaser-xl-medium-ratio auto;
        grid-template-rows: 1fr max-content;
      }

      .teaser__medium-wrapper {
        grid-row: span 2;
      }

      .teaser__scoreboard {
        padding-left: 8px;
        background-color: $color-bg-teaser-supplement;
      }

      .teaser__opinion {
        padding-left: 24px;
      }
    }

    @include desktop-wide {
      .teaser__scoreboard {
        padding-left: 8px;
      }

      .teaser__opinion {
        padding-left: 32px;
      }
    }
  }
}

/* S-ON-MOBILE
 * override style to display a teaser as S-teaser on mobile
 * to be used together with a teaser--size-[m|l] class
 *
 * ↔️ on mobile
 */
.teaser--size-s-on-mobile {
  @include smartphone {
    flex-direction: row;

    &.teaser--with-links {
      flex-direction: column;
    }

    .teaser__main {
      flex-direction: row-reverse;
      flex-wrap: wrap;
    }

    .teaser__content {
      flex: 1 1 0px;
    }

    .teaser__kicker {
      @include fontSize(14);
      line-height: 1.14;
    }

    .teaser__title {
      @include fontSize(16);
      line-height: $emphasize-line-height-ratio;
    }

    .teaser__lead {
      display: none !important; // important: never show lead if element has modifier s-on-mobile -> if !important breaks all your things, it should work with '.teaser__lead.teaser__lead.teaser__lead' too ;-)
    }

    .teaser__medium {
      height: 80px;
      object-fit: cover;
    }

    .teaser__medium-wrapper {
      margin: 16px 16px 16px 0;
      border-radius: 2px;
      overflow: hidden;
      flex-basis: 80px;
      height: 80px;

      &::after {
        border-radius: 2px;
        border: solid 1px rgba(0, 0, 0, 0.04);
        height: 80px;
      }
    }

    .teaser__media-duration {
      display: inline;
    }

    .teaser__opinion,
    .teaser__scoreboard {
      flex: 0 0 100%;
    }
  }
}

.teaser.teaser--theme-dark,
.teaser.teaser--theme-breaking {
  .teaser__kicker,
  .teaser__title {
    @include font-smoothing;
  }
}

/* Normally, teasers don't change on hover (except translation) - with teaser--hoverable the :after-overlay is shown partially */
.teaser--hoverable {
  &:hover {
    &::after {
      opacity: 0.6;
    }
  }

  &:focus,
  &:active {
    &::after {
      opacity: 1;
    }
  }

  .block-link--teaser-link.block-link--internal::after {
    background-image: url('../img/icon/caret_white.svg');
  }

  .block-link--teaser-link.block-link--video::after {
    background-image: url('../img/icon/play-video-circle-white.svg');
  }

  .block-link--teaser-link.block-link--audio::after {
    background-image: url('../img/icon/play-audio-circle-white.svg');
  }
}

.teaser--static {
  width: 100%;
}

.teaser--with-medium {
  .teaser__lead.teaser__lead {
    display: none;
  }

  /* overriding position/size of media still time indicators */
  &.teaser--size-s {
    --media-time-indicator-display: none;
  }

  &.teaser--size-s-on-mobile {
    @include smartphone {
      --media-time-indicator-display: none;
    }
  }

  &.teaser--size-m {
    @include desktop-wide {
      --media-time-indicator-bottom: 12px;
      --media-time-indicator-right: 12px;
    }
  }

  &.teaser--size-l {
    .teaser__lead.teaser__lead {
      display: block;
    }

    @include desktop-up {
      --media-time-indicator-font-size: 16px;
    }

    @include desktop-wide {
      --media-time-indicator-bottom: 12px;
      --media-time-indicator-right: 12px;
    }
  }

  &.teaser--size-xl {
    .teaser__lead.teaser__lead {
      display: block;
    }

    @include tablet-up {
      --media-time-indicator-bottom: 20px;
      --media-time-indicator-right: 20px;
      --media-time-indicator-font-size: 16px;
    }

    @include desktop-wide {
      --media-time-indicator-bottom: 26px;
      --media-time-indicator-right: 26px;
    }
  }
}

.teaser--longform {
  position: relative; // necessary to position medium (see 2 lines below)
  // necessary to have a translucent background (contrary to the default dark teaser)
  &.teaser.teaser--theme-dark {
    --teaser-color-background: transparent;
  }

  &.teaser--size-xl {
    .teaser__longform-medium {
      .image--media-still-dynamic {
        height: 100%;
      }
    }
  }

  .teaser__longform-medium {
    position: absolute;
    z-index: 0;
    // fill the whole container (width: 100% / height: 100% does not work in safari)
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
  }

  // Longform teasers have the dark theme (see _teaser-theme-settings.scss) but the kicker is white.
  .teaser__kicker {
    color: #ffffff;
  }

  .teaser__lead {
    display: block;
  }

  .teaser__main {
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-end;
  }

  .teaser__content {
    flex-grow: 0;
    flex-basis: auto;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 16px;
    @include desktop-wide {
      padding: 24px;
    }
    margin: 0;
    position: relative;
    max-width: 100%;

    &::before {
      content: "";
      position: absolute;
      width: 100%;
      bottom: 100%;
      left: 0;
      height: 80px;
      background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));
    }
  }
  .teaser--longform__links {
    background-color: rgba(0, 0, 0, .6);
  }
  .block-link--teaser-link {
    filter: brightness(100);
  }
}

// Longform Teaser in XL format has some special properties:
.teaser--longform.teaser--size-xl {
  .svg-ratio-enforcer--xl-teaser {
    display: none;
  }

  @include tablet-up {
    .teaser__main {
      flex-direction: row;
      align-content: stretch;
      height: 100%;
      width: 100%;
      justify-items: flex-end;
      display: flex;
    }

    .teaser__content {
      width: calc(100% - #{$teaser-xl-medium-ratio});
      padding: 32px 24px 32px 32px;

      &::before {
        background-image: linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,0.6));
        width: 80px;
        height: 100%;
        top: 0;
        left: -80px;
      }
    }

    .svg-ratio-enforcer {
      display: none;
    }

    .svg-ratio-enforcer--xl-teaser {
      display: block;
    }
  }
}

.teaser__main-outer-wrapper {
  width: 100%;
  display: grid;
  position: relative;
  z-index: 1;
  flex-grow: 1;

  grid-template-columns: 100%;
  grid-template-rows: 100%;

  > * {
    grid-row-start: 1;
    grid-column-start: 1;
    grid-row-end: 2;
    grid-column-end: 2;
  }
}

.teaser__main-inner-wrapper {
  display: flex;
  align-items: stretch;
  flex-direction: column;
  justify-content: flex-end;
  max-height: 100%;
}
/* autoprefixer grid: off */

// Change icon when video is playing
.teaser--video-playing {
  .play-icon {
    &::after {
      background-image: url("../img/icon/stop-video.svg");
    }

    &:hover {
      background-image: url("../img/icon/stop-video.svg");
    }
  }
}

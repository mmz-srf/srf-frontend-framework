@import "../../variables";
@import "../../mixins";
@import "../../breakpoints";

$color-collection-dim: rgba(0, 0, 0, .6) !default;
$color-collection-dim-fade: rgba(0, 0, 0, 0) !default;
$background-overlap: 40px;
$background-overlap-wide: 50px;

.collection {
  margin: 0 auto;
  max-width: $desktop-wide-size;
}

.collection__content-wrapper {
  display: flex;
  flex-direction: column;
  margin: 8px 0 16px;
  border-radius: 2px;
  background-color: $color-bg-caption;
  box-shadow: $shadow-elevation1;

  @include tablet-up {
    margin-bottom: 32px;
  }

  @include desktop-wide {
    margin-bottom: 40px;

  }
}

.collection__title {
  margin: 16px 24px 12px;
  font-family: $font-medium;
  font-feature-settings: "salt";
  font-size: 24px;
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.25;
  letter-spacing: .2px;
  color: $color-text-default;

  @include tablet-up {
    margin: 16px 32px 12px;
  }

  @include desktop-up {
    margin: 20px 32px 16px;
    font-size: 28px;
  }

  @include desktop-wide {
    margin: 20px 40px 16px;
  }
}

.collection__title-link {
  display: inline-flex;
  align-items: center;
  color: $color-link-default;

  &:hover {
    color: #f1434a;

    // estimation of the above color
    .collection__title-link-icon {
      filter: brightness(1.3);
    }
  }

  &:active,
  &:focus {
    color: #ff6669;

    // estimation of the above color
    .collection__title-link-icon {
      filter: brightness(1.37);
      opacity: 0.82;
    }
  }
}

.collection__title-a11y-help {
  @include offscreen-non-focusable;
}

.collection__title-link-icon {
  margin-left: 4px;
  @include caret('red', 'right', 'medium');
  flex: 0 0 24px;
}

.collection__background-image {
  width: 100%;
  margin-bottom: -$background-overlap;
  background-size: cover;
  background-position: center;
  position: relative;

  @include forceAspectRatio("16:9");

  // Fake image border on top of image
  &::after {
    content: "";
    position: absolute;
    top: 0;
    width: 100%;
    height: calc(100% - 2px);
    left: 0;
    border-top: 1px solid rgba(0, 0, 0, .08);
    border-bottom: 1px solid rgba(0, 0, 0, .08);
  }

  @include tablet-up {
    @include forceAspectRatio("3:1");
  }

  @include desktop-wide {
    margin-bottom: -$background-overlap-wide;
  }

  .collection__lead {
    color: $color-text-branded;
    margin-top: 0;
    margin-bottom: 24px;

    @include desktop-wide {
      margin-bottom: 32px;
    }
  }
}

.collection__background-image--with-lead {
  @include forceAspectRatio("1:1");

  @include tablet {
    @include forceAspectRatio("2:1");
  }

  @include desktop-up {
    @include forceAspectRatio("3:1");
  }

  .collection__background-image-dimmer {
    display: block;
  }
}

.collection__background-image-dimmer {
  display: none;
  position: absolute;
  background-color: $color-collection-dim;
  bottom: 0;
  width: 100%;
  height: auto;
  padding-bottom: $background-overlap;

  &::before {
    content: "";
    position: absolute;
    width: 100%;
    background-image: linear-gradient(to bottom, $color-collection-dim-fade, $color-collection-dim);
    height: 80px;
    bottom: 100%;
  }

  @include desktop-wide {
    padding-bottom: $background-overlap-wide;
  }
}

.collection__lead {
  font-family: $font-light;
  font-size: 20px;
  font-weight: 300;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.25;
  letter-spacing: .2px;
  color: $color-text-accentuation;
  margin: -4px 24px 24px;
  max-width: 624px;

  @include tablet-up {
    margin: -2px 32px 32px;
  }

  @include desktop-up {
    font-size: 22px;
    margin-top: -8px;
    max-width: 680px;
  }

  @include desktop-wide {
    margin-left: 40px;
    margin-right: 40px;
  }
}

.collection__teaser-list {
  display: flex;
  flex-direction: column;
  margin: 0 8px 12px;
  padding: 0;

  @include tablet-up {
    flex-direction: row;
    flex-wrap: wrap;
    align-items: stretch;
    margin: 0 32px 16px;
  }

  @include desktop-wide {
    margin: 0 40px 20px;
  }
}

/**
 * Teasers don't know anything about the containing collection. They are
 * controlled by a) the style modifier (like teaser--size-s, teaser--size-m, ...) and
 * b) the viewport width. That's it. A teaser in the "S" format behaves and
 * looks the same, no matter which collection type it is in.
 *
 * The spacing between the teasers and how much space a teaser can take up
 * etc. is determined by the collection.
 *
 * For the spacing:
 * The idea is that a collection__teaser-item has some right- and top-margin.
 * The last item in a row has no right-margin.
 * The first row of items has no top-margin.
 */
.collection__teaser-item {
  display: flex;

  // Override stupid global <li> style
  padding: 0;
  list-style-type: none;
  &::before {
    display: none;
  }

  // mobile first: teaser items have 8px margin between them (after the item), except the last one, which has none.
  margin: 0 0 8px;
  &:last-child {
    margin-bottom: 0;
  }
}

.collection__links {
  margin: 0 8px 12px;
  padding: 0;
  display: flex;
  flex-direction: column;

  @include tablet-up {
    flex-direction: row;
    flex-wrap: wrap;
  }

  @include tablet-up {
    margin: 0 32px 16px;
  }

  @include desktop-wide {
    margin: 0 40px 20px;
  }
}

// DOM:
// <li class="collection__link-item">
//   <a class="collection__link"></a>
// </li>
.collection__link-item {
  margin: 0;
  padding: 0;

  &::before {
    content: none;
  }

  // normally the fake border would be applied to the link-item. But
  // to apply styling when navigation by keyboard, style must be applied
  // to link itself because active state is on <a> only.
  &:first-child .collection__link::before {
    opacity: 0;
  }

  // Can't go from hover on link to parent to next sibling to child.
  // Workaround: hover on parent --> hide border on next sibling's child.
  // Doesn't work when using keyboard navigation but otherwise good enough.
  &:hover + & .collection__link::before {
    opacity: 0;
  }
}

.collection__link {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px;
  font-family: $font-medium;
  font-size: 16px;
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.5;
  letter-spacing: .4px;
  color: $color-text-default;
  border-radius: 2px;
  background-color: $color-bg-button-transparent;
  transition: background-color .2s ease-in-out;

  &:hover {
    color: $color-text-default;
    background-color: $color-bg-button-hover;
  }

  &:active,
  &:focus {
    color: $color-text-default;
    background-color: $color-bg-button-focus;
  }

  // On mobile, show a fake border between the links
  @include smartphone {
    &::before {
      content: "";
      position: absolute;
      background-color: rgba(0, 0, 0, .08);
      width: calc(100% - 8px);
      height: 1px;
      top: 0;
      right: -8px;
      opacity: 1;
      transition: opacity .2s ease-in-out;
    }

    &:hover,
    &:focus,
    &:active {
      &::before {
        opacity: 0;
      }
    }
  }

  @include desktop-up {
    font-size: 18px;
  }
}

.collection__link-text {
  width: 100%; // necessary for IE11
  @include breakLongWords;

  @include tablet-up {
    margin-right: 4px;
  }
}

.collection__link-icon {
  flex-shrink: 0;
  @include caret('grey', 'right', 'medium');
}

// Standard: all M teasers, 1 column on mobile, classic 3 columns on tablet+
.collection--standard,
.collection--highlight {
  .collection__teaser-item {
    @include tablet-up {
      flex-grow: 0;
      flex-shrink: 0;
      @include calculateTeaserFlexBasis(3, 24px);
      margin: 32px 24px 0 0;

      // No right-margin on every third item (margin-right = gap between teasers in a row)
      &:nth-child(3n) {
        margin-right: 0;
      }

      // first three teasers should not have margin-top
      &:nth-child(-n+3) {
        margin-top: 0;
      }
    }

    @include desktop-wide {
      @include calculateTeaserFlexBasis(3, 32px);
      margin: 40px 32px 0 0;
    }
  }
}

.collection--swipeable,
.collection--compact-swipeable {
  .collection__teaser-list {
    flex-wrap: nowrap;
    flex-direction: row;
    margin: 0;
  }

  .collection__teaser-item {
    padding-right: 8px;
    min-width: calc(33.333333334% - (56px / 3) - 12px); // 56px is the visible part of the first 'overflowed' item

    @include smartphone {
      min-width: calc(100% - 40px);
    }

    @include tablet-up {
        padding-right: 12px;
    }

    @include desktop-wide {
        padding-right: 16px;
    }

    &:first-child {
      margin-left: 36px;

      @include smartphone {
        margin-left: 8px;
      }
    }

    &:last-child {
      margin-bottom: 8px;

      &::after {
        @include tablet-up {
          content: '';
          display: block;
          width: 40px;
          margin-right: -36px;
        }
      }
    }
  }
}

.collection__swipeable-area {
    margin-top: -8px;
    margin-bottom: 2px;

    @include tablet-up {
      margin-bottom: 6px;
    }

    @include desktop-wide {
      margin-bottom: 10px;
    }
  }

// Compact Swipeable has (next to only having S teasers on all BPs) one difference to the
// Standard Swipeable collection: On Tablet, only 2 teasers are visible instead of 3.
.collection--compact-swipeable {
  .collection__teaser-item {
    @include tablet {
      min-width: calc(50% - (56px / 3) - 12px);
    }
  }

  .collection__swipeable-area {
    @include tablet-up {
      margin-bottom: 2px;
    }
  }
}

// Hero: 1st teaser XL + fills whole row, rest M which fills 1/3 of a row.
.collection--hero {
  .collection__teaser-item {
    @include tablet-up {
      flex-grow: 0;
      flex-shrink: 0;
      @include calculateTeaserFlexBasis(3, 24px);
      margin: 32px 24px 0 0;

      // First element: XL Teaser. No margins and full width
      &:nth-child(1) {
        margin: 0;
        flex-basis: 100%;
      }

      // No right-margin on every third item, after the first (margin-right = gap between teasers in a row)
      &:nth-child(3n + 1) {
        margin-right: 0;
      }
    }

    @include desktop-wide {
      @include calculateTeaserFlexBasis(3, 32px);
      margin: 40px 32px 0 0;
    }
  }
}

// Duo: 1st teaser always L, 2nd teaser L on Tablet+, otherwise M. 1st and 2nd teaser share the first row
.collection--duo {
  .collection__teaser-item {
    @include tablet-up {
      flex-grow: 0;
      flex-shrink: 0;
      @include calculateTeaserFlexBasis(3, 24px);
      margin: 32px 24px 0 0;

      // 1st/2nd element: L teasers, 50% width and no top-margin
      &:nth-child(1),
      &:nth-child(2) {
        margin-top: 0;
        @include calculateTeaserFlexBasis(2, 24px);
      }

      // no right-margin for 2nd L teaser
      &:nth-child(2) {
        margin: 0;
      }

      // No right-margin on every third item, after the first two (margin-right = gap between teasers in a row)
      &:nth-child(3n + 2) {
        margin-right: 0;
      }
    }

    @include desktop-wide {
      @include calculateTeaserFlexBasis(3, 32px);
      margin: 40px 32px 0 0;

      // Special for Duo: spacing between 1st and 2nd teaser is 40px on desktop wide
      &:nth-child(1) {
        margin-right: 40px;
      }

      &:nth-child(1),
      &:nth-child(2) {
        @include calculateTeaserFlexBasis(2, 40px);
      }
    }
  }
}

// Compact: S teasers only. 2 columns on tablet. Desktop: 2 columns, except if 3 teasers --> then 3 columns
.collection--compact {
  .collection__teaser-item {
    // Tablet + Desktop: 16px row gap, 24px column gap
    @include tablet-up {
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: calc((100% - (1 * 24px)) / 2);
      margin: 16px 24px 0 0;

      // No right-margin on every second item (margin-right = gap between teasers in a row)
      &:nth-child(2n) {
        margin-right: 0;
      }

      // first two teasers should not have margin-top
      &:nth-child(-n+2) {
        margin-top: 0;
      }
    }

    // Desktop-wide: 20px row gap, 32px column gap
    @include desktop-wide {
      flex-basis: calc((100% - (1 * 32px)) / 2);
      margin: 20px 32px 0 0;
    }
  }

  // Exception when it has 3 teasers: then it's aligned in 3 columns on desktop+
  // Fancy CSS rules: style the first child that is also the 3rd last child
  // and then also style all following siblings of the first child that is also the 3rd last child.
  // --> apply styles to all children of a container that has exactly 3 children.
  .collection__teaser-item:first-child:nth-last-child(3),
  .collection__teaser-item:first-child:nth-last-child(3) ~ .collection__teaser-item {
    @include desktop-up {
      flex-basis: calc((100% - (2 * 24px)) / 3);
      margin-top: 0;
      margin-right: 24px;

      &:last-child {
        margin-right: 0;
      }
    }

    @include desktop-wide {
      flex-basis: calc((100% - (2 * 32px)) / 3);
      margin-right: 32px;
    }
  }
}

.collection--branded {
  background-size: cover;

  .collection__content-wrapper {
    background-color: transparent;
  }

  .collection__title,
  .collection__lead,
  .collection__title-link,
  .collection__link {
    color: $color-text-branded;

    @include font-smoothing;
  }

  .collection__link {
    &:hover {
      background-color: rgba(255, 255, 255, .12);
    }

    &:active,
    &:focus {
      background-color: rgba(255, 255, 255, .24);
    }
  }

  // different mechanism when branded: whole link gets transparent
  .collection__title-link {
    transition: opacity .2s ease-in-out;

    &:hover {
      opacity: 0.8;
    }

    &:active,
    &:focus {
      opacity: 0.6;
    }
  }

  .collection__title-link-icon,
  .collection__link-icon {
    @include caret('white', 'right', 'medium');
  }

  @include smartphone {
    .collection__link-item {
      .collection__link {
        &::before {
          background-color: rgba(255, 255, 255, .12);
        }
      }
    }
  }
}

// Unboxed: Collection reaches the browser edge left/right but keeps the content in the
// normal column width. Also doesn't show the title.
.collection--unboxed {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;

  &.collection--branded .collection__content-wrapper {
    padding-top: 8px;

    @include tablet-up {
      padding-top: 24px;
    }
  }

  .collection__content-wrapper {
    max-width: $desktop-wide-size;
    margin: 16px auto 0 auto;
    background-color: transparent;
    box-shadow: none;

    @include tablet-up {
        margin-top: 20px;
    }
  }

  .collection__title {
    display: none;
  }
}
